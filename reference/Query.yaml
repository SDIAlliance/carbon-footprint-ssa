openapi: 3.1.0
info:
  title: Query
  version: 1.0.0
  summary: 'The query API allows you to determine the carbon footprint for different types of scenarios (time-baed or machine-based). '
  description: |-
    Use this API to get the carbon footprint for your any operation happening on the server.

    You can use a time-based query in order to get the carbon emissions that have been created during the processing of a request or a background operation (e.g. making a thumbnail).

    If you simply want the carbon footprint of a running pod or virtual machine, from when it started to now (or to when it stopped), you can query using the pod or virtual machine identifier.
  license:
    name: GPL v3
    url: 'https://github.com/SDIAlliance/carbon-footprint-ssa/blob/main/LICENSE'
servers:
  - url: 'http://localhost:3000'
paths:
  /query:
    parameters: []
    get:
      summary: Get
      operationId: get-query
      description: 'Get the carbon footprint for a machine, pod or timeframe.'
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: k8s_pod_uuid
          description: Each pod in K8s has a unique identifier. UUIDs are standardized as ISO/IEC 9834-8 and as ITU-T X.667.
        - schema:
            type: array
            uniqueItems: true
            behavior: Read Only
          in: query
          name: k8s_pod_uuids
          description: Query multiple in pods in K8s based on UUID
        - schema:
            type: string
            format: time
          in: query
          name: start_time
          description: Unix timestamp to specify from which point in time you want to retrieve the footprint
        - schema:
            type: string
            format: time
          in: query
          name: end_time
          description: 'Unix timestamp to specify until which point in time you want to get the footprint for. If you only specify start_time and not end_time, it will return the footprint up until the current moment.'
        - schema:
            type: string
          in: query
          name: os_instance_id
          description: 'Query a specific OpenStack virtual machine, specified by its instance ID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Carbon-Footprint.yaml
  '':
    parameters: []
components:
  schemas: {}
